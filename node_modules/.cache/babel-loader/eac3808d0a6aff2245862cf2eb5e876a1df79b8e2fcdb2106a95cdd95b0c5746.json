{"ast":null,"code":"import _objectSpread from\"C:/Users/ADMIN/core/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useState}from'react';import'./ProjectList.css';import ProjectCard from'./ProjectCard';import{useAuth}from'../context/AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL=['http://localhost:5005'||'https://pm-back.onrender.com'];const API_URL=\"\".concat(API_BASE_URL,\"/api/projects\");const TASKS_URL=\"\".concat(API_BASE_URL,\"/api/tasks\");const ProjectList=_ref=>{let{onSelectProject,selectedProject,showMyProjects=false,search}=_ref;const[projects,setProjects]=useState([]);const[name,setName]=useState('');const[description,setDescription]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[showTaskForm,setShowTaskForm]=useState(null);const[taskTitle,setTaskTitle]=useState('');const[taskDescription,setTaskDescription]=useState('');const[taskAssignedTo,setTaskAssignedTo]=useState('');const[taskDeadline,setTaskDeadline]=useState('');const[taskStatus,setTaskStatus]=useState('todo');const[taskProgress1,setTaskProgress1]=useState(0);const[taskProgress2,setTaskProgress2]=useState(0);const[taskProgressType,setTaskProgressType]=useState('progress');const[projectTasks,setProjectTasks]=useState({});const[selectedProjectId,setSelectedProjectId]=useState(null);const[openDropdownProjectId,setOpenDropdownProjectId]=useState(null);const{user}=useAuth();const fetchProjects=async()=>{setLoading(true);setError('');try{let url=API_URL;let headers={'Accept':'application/json','Content-Type':'application/json'};const token=localStorage.getItem('token');if(showMyProjects&&token){url=API_URL+'/mine';headers['Authorization']=\"Bearer \".concat(token);}const res=await fetch(url,{headers});if(!res.ok){const errorData=await res.json().catch(()=>({}));throw new Error(errorData.message||\"HTTP error! status: \".concat(res.status));}const data=await res.json();setProjects(data);// Fetch all tasks at once\nconst tasksRes=await fetch(TASKS_URL,{headers:{'Accept':'application/json','Content-Type':'application/json'}});if(!tasksRes.ok)throw new Error('Failed to fetch tasks');const allTasks=await tasksRes.json();// Group tasks by project\nconst grouped={};allTasks.forEach(task=>{// Handle both populated and non-populated project field\nconst pid=typeof task.project==='object'&&task.project!==null?String(task.project._id):String(task.project);if(!grouped[pid])grouped[pid]=[];grouped[pid].push(task);});setProjectTasks(grouped);}catch(err){console.error('Error fetching projects or tasks:',err);setError(err.message||'Failed to load projects or tasks.');}finally{setLoading(false);}};useEffect(()=>{console.log('Fetching projects, showMyProjects:',showMyProjects);fetchProjects();},[showMyProjects]);const handleCreate=async e=>{e.preventDefault();if(!name)return;const token=localStorage.getItem('token');if(!token){setError('Please sign in to create a project.');return;}setLoading(true);setError('');try{console.log('Creating project with payload:',{name,description});const res=await fetch(API_URL,{method:'POST',headers:_objectSpread({'Accept':'application/json','Content-Type':'application/json'},token?{'Authorization':\"Bearer \".concat(token)}:{}),body:JSON.stringify({name,description})});console.log('Response status:',res.status);if(!res.ok){const errorData=await res.json().catch(()=>({}));throw new Error(errorData.message||\"HTTP error! status: \".concat(res.status));}const data=await res.json();console.log('Project created successfully:',data);setName('');setDescription('');fetchProjects();}catch(err){console.error('Error creating project:',err);setError(err.message||'Failed to create project. Please try again.');}finally{setLoading(false);}};const handleDelete=async projectId=>{if(!window.confirm('Are you sure you want to delete this project?')){return;}setLoading(true);setError('');try{const res=await fetch(\"\".concat(API_URL,\"/\").concat(projectId),{method:'DELETE',headers:{'Accept':'application/json','Content-Type':'application/json'}});if(!res.ok){const errorData=await res.json().catch(()=>({}));throw new Error(errorData.message||\"HTTP error! status: \".concat(res.status));}if(selectedProject&&selectedProject._id===projectId){onSelectProject(null);}fetchProjects();}catch(err){console.error('Error deleting project:',err);setError(err.message||'Failed to delete project. Please try again.');}finally{setLoading(false);}};const handleAddOrUpdateTask=async projectId=>{setLoading(true);setError('');try{const existingTask=projectTasks[projectId]&&projectTasks[projectId][0];let res;let newTask;if(existingTask){// Update task\nres=await fetch(\"\".concat(TASKS_URL,\"/\").concat(existingTask._id),{method:'PUT',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({title:taskTitle,description:taskDescription,status:taskStatus,project:projectId,assignedTo:taskAssignedTo,deadline:taskDeadline||undefined,progress1:taskProgress1,progress2:taskProgress2,progressType:taskProgressType})});if(!res.ok){const errorData=await res.json().catch(()=>({}));throw new Error(errorData.message||\"HTTP error! status: \".concat(res.status));}newTask=await res.json();}else{// Add new task\nres=await fetch(TASKS_URL,{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({title:taskTitle,description:taskDescription,status:taskStatus,project:projectId,assignedTo:taskAssignedTo,deadline:taskDeadline||undefined,progress1:taskProgress1,progress2:taskProgress2,progressType:taskProgressType})});if(!res.ok){const errorData=await res.json().catch(()=>({}));throw new Error(errorData.message||\"HTTP error! status: \".concat(res.status));}newTask=await res.json();}// Refresh all tasks from backend to ensure latest values\nawait fetchProjects();setShowTaskForm(null);setOpenDropdownProjectId(null);setTaskTitle('');setTaskDescription('');setTaskAssignedTo('');setTaskDeadline('');setTaskStatus('todo');setTaskProgress1(0);setTaskProgress2(0);setTaskProgressType('progress');}catch(err){setError(err.message||'Failed to create/update task. Please try again.');}finally{setLoading(false);}};const handleDeleteTask=async(projectId,taskId)=>{if(!window.confirm('Are you sure you want to delete this task?')){return;}setLoading(true);setError('');try{const res=await fetch(\"\".concat(TASKS_URL,\"/\").concat(taskId),{method:'DELETE',headers:{'Accept':'application/json','Content-Type':'application/json'}});if(!res.ok){const errorData=await res.json().catch(()=>({}));throw new Error(errorData.message||\"HTTP error! status: \".concat(res.status));}// Update tasks for this specific project by removing the deleted task\nsetProjectTasks(prev=>_objectSpread(_objectSpread({},prev),{},{[projectId]:prev[projectId].filter(task=>task._id!==taskId)}));}catch(err){console.error('Error deleting task:',err);setError(err.message||'Failed to delete task. Please try again.');}finally{setLoading(false);}};const getStatusColor=status=>{switch(status){case'todo':return'#ffc107';case'in-progress':return'#17a2b8';case'completed':return'#28a745';default:return'#6c757d';}};const getProjectProgressType=projectId=>{const tasks=projectTasks[projectId]||[];if(tasks.length>0){return tasks[0].progressType||'progress';}return'progress';};const renderTaskForm=projectId=>{var _projectTasks$project,_projectTasks$project2;return/*#__PURE__*/_jsx(\"div\",{className:\"task-form-container\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:e=>{e.preventDefault();handleAddOrUpdateTask(projectId);},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:taskTitle,onChange:e=>setTaskTitle(e.target.value),placeholder:\"Task title\",required:true,disabled:loading}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:taskDescription,onChange:e=>setTaskDescription(e.target.value),placeholder:\"Description\",disabled:loading}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:taskAssignedTo,onChange:e=>setTaskAssignedTo(e.target.value),placeholder:\"Assigned to\",disabled:loading}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:taskDeadline,onChange:e=>setTaskDeadline(e.target.value),disabled:loading}),/*#__PURE__*/_jsxs(\"select\",{value:taskProgressType,onChange:e=>setTaskProgressType(e.target.value),disabled:loading,children:[/*#__PURE__*/_jsx(\"option\",{value:\"progress1\",children:\"Progress 1\"}),/*#__PURE__*/_jsx(\"option\",{value:\"progress2\",children:\"Progress 2\"}),/*#__PURE__*/_jsx(\"option\",{value:\"completed\",children:\"Completed\"})]}),taskProgressType==='progress1'&&/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:taskProgress1,onChange:e=>setTaskProgress1(Number(e.target.value)),placeholder:\"Progress 1 (0-100)\",min:0,max:100,disabled:loading}),taskProgressType==='progress2'&&/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:taskProgress2,onChange:e=>setTaskProgress2(Number(e.target.value)),placeholder:\"Progress 2 (0-100)\",min:0,max:100,disabled:loading}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?((_projectTasks$project=projectTasks[projectId])===null||_projectTasks$project===void 0?void 0:_projectTasks$project.length)>0?'Updating...':'Adding...':((_projectTasks$project2=projectTasks[projectId])===null||_projectTasks$project2===void 0?void 0:_projectTasks$project2.length)>0?'Update Task':'Add Task'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>{setShowTaskForm(null);setOpenDropdownProjectId(null);},disabled:loading,className:\"cancel-button\",children:\"Cancel\"})]})]})});};const filteredProjects=search?projects.filter(p=>p.name&&p.name.toLowerCase().includes(search.toLowerCase())||p.description&&p.description.toLowerCase().includes(search.toLowerCase())):projects;return/*#__PURE__*/_jsxs(\"div\",{className:\"project-list-container\",children:[!selectedProject&&/*#__PURE__*/_jsx(\"div\",{className:\"select-project-above-cards\",children:/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'1.2rem',fontWeight:500},children:\"Select a project to view tasks.\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"project-list-grid\",children:filteredProjects.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-projects-message\",children:\"No projects. Add your project!\"}):filteredProjects.map((project,idx)=>{const projectTasksArr=projectTasks[project._id]||[];const showTaskFormBelow=showTaskForm===project._id;return/*#__PURE__*/_jsx(ProjectCard,{project:project,colorIdx:idx,onAddTask:()=>{// If editing, prefill form with task values\nif(projectTasksArr.length>0){const task=projectTasksArr[0];setTaskTitle(task.title||'');setTaskDescription(task.description||'');setTaskAssignedTo(task.assignedTo||'');setTaskDeadline(task.deadline?task.deadline.slice(0,10):'');setTaskStatus(task.status||'todo');setTaskProgress1(task.progress1||0);setTaskProgress2(task.progress2||0);setTaskProgressType(task.progressType||'progress');}else{setTaskTitle('');setTaskDescription('');setTaskAssignedTo('');setTaskDeadline('');setTaskStatus('todo');setTaskProgress1(0);setTaskProgress2(0);setTaskProgressType('progress');}setShowTaskForm(project._id);},onDeleteProject:()=>handleDelete(project._id),hasTask:!!(projectTasksArr&&projectTasksArr.length),tasks:projectTasksArr,showTaskDropdown:openDropdownProjectId===project._id,onToggleDropdown:v=>setOpenDropdownProjectId(v?project._id:null),showTaskFormBelow:showTaskForm===project._id,onDeleteTask:handleDeleteTask,progressType:getProjectProgressType(project._id),createdBy:project.createdBy,children:showTaskForm===project._id&&renderTaskForm(project._id)},project._id);})})]});};export default ProjectList;","map":{"version":3,"names":["React","useEffect","useState","ProjectCard","useAuth","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","API_URL","concat","TASKS_URL","ProjectList","_ref","onSelectProject","selectedProject","showMyProjects","search","projects","setProjects","name","setName","description","setDescription","loading","setLoading","error","setError","showTaskForm","setShowTaskForm","taskTitle","setTaskTitle","taskDescription","setTaskDescription","taskAssignedTo","setTaskAssignedTo","taskDeadline","setTaskDeadline","taskStatus","setTaskStatus","taskProgress1","setTaskProgress1","taskProgress2","setTaskProgress2","taskProgressType","setTaskProgressType","projectTasks","setProjectTasks","selectedProjectId","setSelectedProjectId","openDropdownProjectId","setOpenDropdownProjectId","user","fetchProjects","url","headers","token","localStorage","getItem","res","fetch","ok","errorData","json","catch","Error","message","status","data","tasksRes","allTasks","grouped","forEach","task","pid","project","String","_id","push","err","console","log","handleCreate","e","preventDefault","method","_objectSpread","body","JSON","stringify","handleDelete","projectId","window","confirm","handleAddOrUpdateTask","existingTask","newTask","title","assignedTo","deadline","undefined","progress1","progress2","progressType","handleDeleteTask","taskId","prev","filter","getStatusColor","getProjectProgressType","tasks","length","renderTaskForm","_projectTasks$project","_projectTasks$project2","className","children","onSubmit","type","value","onChange","target","placeholder","required","disabled","Number","min","max","onClick","filteredProjects","p","toLowerCase","includes","style","fontSize","fontWeight","map","idx","projectTasksArr","showTaskFormBelow","colorIdx","onAddTask","slice","onDeleteProject","hasTask","showTaskDropdown","onToggleDropdown","v","onDeleteTask","createdBy"],"sources":["C:/Users/ADMIN/core/project-manage/frontend/src/components/ProjectList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './ProjectList.css';\nimport ProjectCard from './ProjectCard';\nimport { useAuth } from '../context/AuthContext';\n\nconst API_BASE_URL =  ['http://localhost:5005'||'https://pm-back.onrender.com'];\n\nconst API_URL = `${API_BASE_URL}/api/projects`;\nconst TASKS_URL = `${API_BASE_URL}/api/tasks`;\n\nconst ProjectList = ({ onSelectProject, selectedProject, showMyProjects = false, search }) => {\n  const [projects, setProjects] = useState([]);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [showTaskForm, setShowTaskForm] = useState(null);\n  const [taskTitle, setTaskTitle] = useState('');\n  const [taskDescription, setTaskDescription] = useState('');\n  const [taskAssignedTo, setTaskAssignedTo] = useState('');\n  const [taskDeadline, setTaskDeadline] = useState('');\n  const [taskStatus, setTaskStatus] = useState('todo');\n  const [taskProgress1, setTaskProgress1] = useState(0);\n  const [taskProgress2, setTaskProgress2] = useState(0);\n  const [taskProgressType, setTaskProgressType] = useState('progress');\n  const [projectTasks, setProjectTasks] = useState({});\n  const [selectedProjectId, setSelectedProjectId] = useState(null);\n  const [openDropdownProjectId, setOpenDropdownProjectId] = useState(null);\n  const { user } = useAuth();\n\n  const fetchProjects = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      let url = API_URL;\n      let headers = {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n      };\n      const token = localStorage.getItem('token');\n      if (showMyProjects && token) {\n        url = API_URL + '/mine';\n        headers['Authorization'] = `Bearer ${token}`;\n        }\n      const res = await fetch(url, { headers });\n      if (!res.ok) {\n        const errorData = await res.json().catch(() => ({}));\n        throw new Error(errorData.message || `HTTP error! status: ${res.status}`);\n      }\n    const data = await res.json();\n    setProjects(data);\n      \n      // Fetch all tasks at once\n      const tasksRes = await fetch(TASKS_URL, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!tasksRes.ok) throw new Error('Failed to fetch tasks');\n      const allTasks = await tasksRes.json();\n\n      // Group tasks by project\n      const grouped = {};\n      allTasks.forEach(task => {\n        // Handle both populated and non-populated project field\n        const pid = typeof task.project === 'object' && task.project !== null\n          ? String(task.project._id)\n          : String(task.project);\n        if (!grouped[pid]) grouped[pid] = [];\n        grouped[pid].push(task);\n      });\n      setProjectTasks(grouped);\n\n    } catch (err) {\n      console.error('Error fetching projects or tasks:', err);\n      setError(err.message || 'Failed to load projects or tasks.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    console.log('Fetching projects, showMyProjects:', showMyProjects);\n    fetchProjects();\n  }, [showMyProjects]);\n\n  const handleCreate = async (e) => {\n    e.preventDefault();\n    if (!name) return;\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('Please sign in to create a project.');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      console.log('Creating project with payload:', { name, description });\n      const res = await fetch(API_URL, {\n      method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          ...(token ? { 'Authorization': `Bearer ${token}` } : {})\n        },\n      body: JSON.stringify({ name, description })\n    });\n\n      console.log('Response status:', res.status);\n      if (!res.ok) {\n        const errorData = await res.json().catch(() => ({}));\n        throw new Error(errorData.message || `HTTP error! status: ${res.status}`);\n      }\n\n      const data = await res.json();\n      console.log('Project created successfully:', data);\n\n    setName('');\n    setDescription('');\n    fetchProjects();\n    } catch (err) {\n      console.error('Error creating project:', err);\n      setError(err.message || 'Failed to create project. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async (projectId) => {\n    if (!window.confirm('Are you sure you want to delete this project?')) {\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    try {\n      const res = await fetch(`${API_URL}/${projectId}`, {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!res.ok) {\n        const errorData = await res.json().catch(() => ({}));\n        throw new Error(errorData.message || `HTTP error! status: ${res.status}`);\n      }\n\n      if (selectedProject && selectedProject._id === projectId) {\n        onSelectProject(null);\n      }\n      \n      fetchProjects();\n    } catch (err) {\n      console.error('Error deleting project:', err);\n      setError(err.message || 'Failed to delete project. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddOrUpdateTask = async (projectId) => {\n    setLoading(true);\n    setError('');\n    try {\n      const existingTask = projectTasks[projectId] && projectTasks[projectId][0];\n      let res;\n      let newTask;\n      if (existingTask) {\n        // Update task\n        res = await fetch(`${TASKS_URL}/${existingTask._id}`, {\n          method: 'PUT',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            title: taskTitle,\n            description: taskDescription,\n            status: taskStatus,\n            project: projectId,\n            assignedTo: taskAssignedTo,\n            deadline: taskDeadline || undefined,\n            progress1: taskProgress1,\n            progress2: taskProgress2,\n            progressType: taskProgressType\n          })\n        });\n        if (!res.ok) {\n          const errorData = await res.json().catch(() => ({}));\n          throw new Error(errorData.message || `HTTP error! status: ${res.status}`);\n        }\n        newTask = await res.json();\n      } else {\n        // Add new task\n        res = await fetch(TASKS_URL, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: taskTitle,\n          description: taskDescription,\n          status: taskStatus,\n          project: projectId,\n          assignedTo: taskAssignedTo,\n            deadline: taskDeadline || undefined,\n            progress1: taskProgress1,\n            progress2: taskProgress2,\n            progressType: taskProgressType\n        })\n      });\n      if (!res.ok) {\n        const errorData = await res.json().catch(() => ({}));\n        throw new Error(errorData.message || `HTTP error! status: ${res.status}`);\n      }\n        newTask = await res.json();\n      }\n      // Refresh all tasks from backend to ensure latest values\n      await fetchProjects();\n      setShowTaskForm(null);\n      setOpenDropdownProjectId(null);\n      setTaskTitle('');\n      setTaskDescription('');\n      setTaskAssignedTo('');\n      setTaskDeadline('');\n      setTaskStatus('todo');\n      setTaskProgress1(0);\n      setTaskProgress2(0);\n      setTaskProgressType('progress');\n    } catch (err) {\n      setError(err.message || 'Failed to create/update task. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteTask = async (projectId, taskId) => {\n    if (!window.confirm('Are you sure you want to delete this task?')) {\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    try {\n      const res = await fetch(`${TASKS_URL}/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!res.ok) {\n        const errorData = await res.json().catch(() => ({}));\n        throw new Error(errorData.message || `HTTP error! status: ${res.status}`);\n      }\n\n      // Update tasks for this specific project by removing the deleted task\n      setProjectTasks(prev => ({\n        ...prev,\n        [projectId]: prev[projectId].filter(task => task._id !== taskId)\n      }));\n    } catch (err) {\n      console.error('Error deleting task:', err);\n      setError(err.message || 'Failed to delete task. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'todo': return '#ffc107';\n      case 'in-progress': return '#17a2b8';\n      case 'completed': return '#28a745';\n      default: return '#6c757d';\n    }\n  };\n\n  const getProjectProgressType = (projectId) => {\n    const tasks = projectTasks[projectId] || [];\n    if (tasks.length > 0) {\n      return tasks[0].progressType || 'progress';\n    }\n    return 'progress';\n  };\n\n  const renderTaskForm = (projectId) => (\n              <div className=\"task-form-container\">\n      <form onSubmit={e => { e.preventDefault(); handleAddOrUpdateTask(projectId); }}>\n                  <input\n                    type=\"text\"\n                    value={taskTitle}\n                    onChange={e => setTaskTitle(e.target.value)}\n                    placeholder=\"Task title\"\n                    required\n                    disabled={loading}\n                  />\n                  <input\n                    type=\"text\"\n                    value={taskDescription}\n                    onChange={e => setTaskDescription(e.target.value)}\n                    placeholder=\"Description\"\n                    disabled={loading}\n                  />\n                  <input\n                    type=\"text\"\n                    value={taskAssignedTo}\n                    onChange={e => setTaskAssignedTo(e.target.value)}\n                    placeholder=\"Assigned to\"\n                    disabled={loading}\n                  />\n                  <input\n                    type=\"date\"\n                    value={taskDeadline}\n                    onChange={e => setTaskDeadline(e.target.value)}\n                    disabled={loading}\n                  />\n                  <select\n          value={taskProgressType}\n          onChange={e => setTaskProgressType(e.target.value)}\n                    disabled={loading}\n                  >\n          <option value=\"progress1\">Progress 1</option>\n          <option value=\"progress2\">Progress 2</option>\n                    <option value=\"completed\">Completed</option>\n                  </select>\n        {taskProgressType === 'progress1' && (\n          <input\n            type=\"number\"\n            value={taskProgress1}\n            onChange={e => setTaskProgress1(Number(e.target.value))}\n            placeholder=\"Progress 1 (0-100)\"\n            min={0}\n            max={100}\n            disabled={loading}\n          />\n        )}\n        {taskProgressType === 'progress2' && (\n          <input\n            type=\"number\"\n            value={taskProgress2}\n            onChange={e => setTaskProgress2(Number(e.target.value))}\n            placeholder=\"Progress 2 (0-100)\"\n            min={0}\n            max={100}\n            disabled={loading}\n          />\n        )}\n                  <div className=\"task-form-actions\">\n                    <button type=\"submit\" disabled={loading}>\n            {loading ? (projectTasks[projectId]?.length > 0 ? 'Updating...' : 'Adding...') : (projectTasks[projectId]?.length > 0 ? 'Update Task' : 'Add Task')}\n                    </button>\n                    <button\n                      type=\"button\"\n            onClick={() => {\n              setShowTaskForm(null);\n              setOpenDropdownProjectId(null);\n            }}\n                      disabled={loading}\n                      className=\"cancel-button\"\n                    >\n                      Cancel\n                    </button>\n                  </div>\n                </form>\n              </div>\n  );\n\n  const filteredProjects = search\n    ? projects.filter(p =>\n        (p.name && p.name.toLowerCase().includes(search.toLowerCase())) ||\n        (p.description && p.description.toLowerCase().includes(search.toLowerCase()))\n      )\n    : projects;\n\n  return (\n    <div className=\"project-list-container\">\n      {!selectedProject && (\n        <div className=\"select-project-above-cards\">\n          <span style={{fontSize: '1.2rem', fontWeight: 500}}>Select a project to view tasks.</span>\n      </div>\n      )}\n      <div className=\"project-list-grid\">\n        {filteredProjects.length === 0 ? (\n          <div className=\"no-projects-message\">No projects. Add your project!</div>\n        ) : (\n          filteredProjects.map((project, idx) => {\n            const projectTasksArr = projectTasks[project._id] || [];\n            const showTaskFormBelow = showTaskForm === project._id;\n            return (\n              <ProjectCard\n                key={project._id}\n                project={project}\n                colorIdx={idx}\n                onAddTask={() => {\n                  // If editing, prefill form with task values\n                  if (projectTasksArr.length > 0) {\n                    const task = projectTasksArr[0];\n                    setTaskTitle(task.title || '');\n                    setTaskDescription(task.description || '');\n                    setTaskAssignedTo(task.assignedTo || '');\n                    setTaskDeadline(task.deadline ? task.deadline.slice(0, 10) : '');\n                    setTaskStatus(task.status || 'todo');\n                    setTaskProgress1(task.progress1 || 0);\n                    setTaskProgress2(task.progress2 || 0);\n                    setTaskProgressType(task.progressType || 'progress');\n                  } else {\n                    setTaskTitle('');\n                    setTaskDescription('');\n                    setTaskAssignedTo('');\n                    setTaskDeadline('');\n                    setTaskStatus('todo');\n                    setTaskProgress1(0);\n                    setTaskProgress2(0);\n                    setTaskProgressType('progress');\n                  }\n                  setShowTaskForm(project._id);\n                }}\n                onDeleteProject={() => handleDelete(project._id)}\n                hasTask={!!(projectTasksArr && projectTasksArr.length)}\n                tasks={projectTasksArr}\n                showTaskDropdown={openDropdownProjectId === project._id}\n                onToggleDropdown={v => setOpenDropdownProjectId(v ? project._id : null)}\n                showTaskFormBelow={showTaskForm === project._id}\n                onDeleteTask={handleDeleteTask}\n                progressType={getProjectProgressType(project._id)}\n                createdBy={project.createdBy}\n              >\n                {showTaskForm === project._id && renderTaskForm(project._id)}\n              </ProjectCard>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}