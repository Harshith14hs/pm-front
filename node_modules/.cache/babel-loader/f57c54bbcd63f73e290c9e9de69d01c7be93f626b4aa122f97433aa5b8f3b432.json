{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\core\\\\project-manage\\\\frontend\\\\src\\\\components\\\\ProjectList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './ProjectList.css';\nimport ProjectCard from './ProjectCard';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = ['https://localhost:5005' || 'https://pm-back.onrender.com'];\nconst API_URL = `${API_BASE_URL}/api/projects`;\nconst TASKS_URL = `${API_BASE_URL}/api/tasks`;\nconst ProjectList = ({\n  onSelectProject,\n  selectedProject,\n  showMyProjects = false,\n  search\n}) => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [showTaskForm, setShowTaskForm] = useState(null);\n  const [taskTitle, setTaskTitle] = useState('');\n  const [taskDescription, setTaskDescription] = useState('');\n  const [taskAssignedTo, setTaskAssignedTo] = useState('');\n  const [taskDeadline, setTaskDeadline] = useState('');\n  const [taskStatus, setTaskStatus] = useState('todo');\n  const [taskProgress1, setTaskProgress1] = useState(0);\n  const [taskProgress2, setTaskProgress2] = useState(0);\n  const [taskProgressType, setTaskProgressType] = useState('progress');\n  const [projectTasks, setProjectTasks] = useState({});\n  const [selectedProjectId, setSelectedProjectId] = useState(null);\n  const [openDropdownProjectId, setOpenDropdownProjectId] = useState(null);\n  const {\n    user\n  } = useAuth();\n  const fetchProjects = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      let url = API_URL;\n      let headers = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      };\n      const token = localStorage.getItem('token');\n      if (showMyProjects && token) {\n        url = API_URL + '/mine';\n        headers['Authorization'] = `Bearer ${token}`;\n      }\n      const res = await fetch(url, {\n        headers\n      });\n      if (!res.ok) {\n        const errorData = await res.json().catch(() => ({}));\n        throw new Error(errorData.message || `HTTP error! status: ${res.status}`);\n      }\n      const data = await res.json();\n      setProjects(data);\n\n      // Fetch all tasks at once\n      const tasksRes = await fetch(TASKS_URL, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!tasksRes.ok) throw new Error('Failed to fetch tasks');\n      const allTasks = await tasksRes.json();\n\n      // Group tasks by project\n      const grouped = {};\n      allTasks.forEach(task => {\n        // Handle both populated and non-populated project field\n        const pid = typeof task.project === 'object' && task.project !== null ? String(task.project._id) : String(task.project);\n        if (!grouped[pid]) grouped[pid] = [];\n        grouped[pid].push(task);\n      });\n      setProjectTasks(grouped);\n    } catch (err) {\n      console.error('Error fetching projects or tasks:', err);\n      setError(err.message || 'Failed to load projects or tasks.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    console.log('Fetching projects, showMyProjects:', showMyProjects);\n    fetchProjects();\n  }, [showMyProjects]);\n  const handleCreate = async e => {\n    e.preventDefault();\n    if (!name) return;\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('Please sign in to create a project.');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      console.log('Creating project with payload:', {\n        name,\n        description\n      });\n      const res = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          ...(token ? {\n            'Authorization': `Bearer ${token}`\n          } : {})\n        },\n        body: JSON.stringify({\n          name,\n          description\n        })\n      });\n      console.log('Response status:', res.status);\n      if (!res.ok) {\n        const errorData = await res.json().catch(() => ({}));\n        throw new Error(errorData.message || `HTTP error! status: ${res.status}`);\n      }\n      const data = await res.json();\n      console.log('Project created successfully:', data);\n      setName('');\n      setDescription('');\n      fetchProjects();\n    } catch (err) {\n      console.error('Error creating project:', err);\n      setError(err.message || 'Failed to create project. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDelete = async projectId => {\n    if (!window.confirm('Are you sure you want to delete this project?')) {\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      const res = await fetch(`${API_URL}/${projectId}`, {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!res.ok) {\n        const errorData = await res.json().catch(() => ({}));\n        throw new Error(errorData.message || `HTTP error! status: ${res.status}`);\n      }\n      if (selectedProject && selectedProject._id === projectId) {\n        onSelectProject(null);\n      }\n      fetchProjects();\n    } catch (err) {\n      console.error('Error deleting project:', err);\n      setError(err.message || 'Failed to delete project. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAddOrUpdateTask = async projectId => {\n    setLoading(true);\n    setError('');\n    try {\n      const existingTask = projectTasks[projectId] && projectTasks[projectId][0];\n      let res;\n      let newTask;\n      if (existingTask) {\n        // Update task\n        res = await fetch(`${TASKS_URL}/${existingTask._id}`, {\n          method: 'PUT',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            title: taskTitle,\n            description: taskDescription,\n            status: taskStatus,\n            project: projectId,\n            assignedTo: taskAssignedTo,\n            deadline: taskDeadline || undefined,\n            progress1: taskProgress1,\n            progress2: taskProgress2,\n            progressType: taskProgressType\n          })\n        });\n        if (!res.ok) {\n          const errorData = await res.json().catch(() => ({}));\n          throw new Error(errorData.message || `HTTP error! status: ${res.status}`);\n        }\n        newTask = await res.json();\n      } else {\n        // Add new task\n        res = await fetch(TASKS_URL, {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            title: taskTitle,\n            description: taskDescription,\n            status: taskStatus,\n            project: projectId,\n            assignedTo: taskAssignedTo,\n            deadline: taskDeadline || undefined,\n            progress1: taskProgress1,\n            progress2: taskProgress2,\n            progressType: taskProgressType\n          })\n        });\n        if (!res.ok) {\n          const errorData = await res.json().catch(() => ({}));\n          throw new Error(errorData.message || `HTTP error! status: ${res.status}`);\n        }\n        newTask = await res.json();\n      }\n      // Refresh all tasks from backend to ensure latest values\n      await fetchProjects();\n      setShowTaskForm(null);\n      setOpenDropdownProjectId(null);\n      setTaskTitle('');\n      setTaskDescription('');\n      setTaskAssignedTo('');\n      setTaskDeadline('');\n      setTaskStatus('todo');\n      setTaskProgress1(0);\n      setTaskProgress2(0);\n      setTaskProgressType('progress');\n    } catch (err) {\n      setError(err.message || 'Failed to create/update task. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeleteTask = async (projectId, taskId) => {\n    if (!window.confirm('Are you sure you want to delete this task?')) {\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      const res = await fetch(`${TASKS_URL}/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!res.ok) {\n        const errorData = await res.json().catch(() => ({}));\n        throw new Error(errorData.message || `HTTP error! status: ${res.status}`);\n      }\n\n      // Update tasks for this specific project by removing the deleted task\n      setProjectTasks(prev => ({\n        ...prev,\n        [projectId]: prev[projectId].filter(task => task._id !== taskId)\n      }));\n    } catch (err) {\n      console.error('Error deleting task:', err);\n      setError(err.message || 'Failed to delete task. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'todo':\n        return '#ffc107';\n      case 'in-progress':\n        return '#17a2b8';\n      case 'completed':\n        return '#28a745';\n      default:\n        return '#6c757d';\n    }\n  };\n  const getProjectProgressType = projectId => {\n    const tasks = projectTasks[projectId] || [];\n    if (tasks.length > 0) {\n      return tasks[0].progressType || 'progress';\n    }\n    return 'progress';\n  };\n  const renderTaskForm = projectId => {\n    var _projectTasks$project, _projectTasks$project2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleAddOrUpdateTask(projectId);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: taskTitle,\n          onChange: e => setTaskTitle(e.target.value),\n          placeholder: \"Task title\",\n          required: true,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: taskDescription,\n          onChange: e => setTaskDescription(e.target.value),\n          placeholder: \"Description\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: taskAssignedTo,\n          onChange: e => setTaskAssignedTo(e.target.value),\n          placeholder: \"Assigned to\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: taskDeadline,\n          onChange: e => setTaskDeadline(e.target.value),\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: taskProgressType,\n          onChange: e => setTaskProgressType(e.target.value),\n          disabled: loading,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"progress1\",\n            children: \"Progress 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"progress2\",\n            children: \"Progress 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"completed\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 19\n        }, this), taskProgressType === 'progress1' && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: taskProgress1,\n          onChange: e => setTaskProgress1(Number(e.target.value)),\n          placeholder: \"Progress 1 (0-100)\",\n          min: 0,\n          max: 100,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), taskProgressType === 'progress2' && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: taskProgress2,\n          onChange: e => setTaskProgress2(Number(e.target.value)),\n          placeholder: \"Progress 2 (0-100)\",\n          min: 0,\n          max: 100,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading,\n            children: loading ? ((_projectTasks$project = projectTasks[projectId]) === null || _projectTasks$project === void 0 ? void 0 : _projectTasks$project.length) > 0 ? 'Updating...' : 'Adding...' : ((_projectTasks$project2 = projectTasks[projectId]) === null || _projectTasks$project2 === void 0 ? void 0 : _projectTasks$project2.length) > 0 ? 'Update Task' : 'Add Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setShowTaskForm(null);\n              setOpenDropdownProjectId(null);\n            },\n            disabled: loading,\n            className: \"cancel-button\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }, this);\n  };\n  const filteredProjects = search ? projects.filter(p => p.name && p.name.toLowerCase().includes(search.toLowerCase()) || p.description && p.description.toLowerCase().includes(search.toLowerCase())) : projects;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-list-container\",\n    children: [!selectedProject && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-project-above-cards\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: '1.2rem',\n          fontWeight: 500\n        },\n        children: \"Select a project to view tasks.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-list-grid\",\n      children: filteredProjects.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-projects-message\",\n        children: \"No projects. Add your project!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this) : filteredProjects.map((project, idx) => {\n        const projectTasksArr = projectTasks[project._id] || [];\n        const showTaskFormBelow = showTaskForm === project._id;\n        return /*#__PURE__*/_jsxDEV(ProjectCard, {\n          project: project,\n          colorIdx: idx,\n          onAddTask: () => {\n            // If editing, prefill form with task values\n            if (projectTasksArr.length > 0) {\n              const task = projectTasksArr[0];\n              setTaskTitle(task.title || '');\n              setTaskDescription(task.description || '');\n              setTaskAssignedTo(task.assignedTo || '');\n              setTaskDeadline(task.deadline ? task.deadline.slice(0, 10) : '');\n              setTaskStatus(task.status || 'todo');\n              setTaskProgress1(task.progress1 || 0);\n              setTaskProgress2(task.progress2 || 0);\n              setTaskProgressType(task.progressType || 'progress');\n            } else {\n              setTaskTitle('');\n              setTaskDescription('');\n              setTaskAssignedTo('');\n              setTaskDeadline('');\n              setTaskStatus('todo');\n              setTaskProgress1(0);\n              setTaskProgress2(0);\n              setTaskProgressType('progress');\n            }\n            setShowTaskForm(project._id);\n          },\n          onDeleteProject: () => handleDelete(project._id),\n          hasTask: !!(projectTasksArr && projectTasksArr.length),\n          tasks: projectTasksArr,\n          showTaskDropdown: openDropdownProjectId === project._id,\n          onToggleDropdown: v => setOpenDropdownProjectId(v ? project._id : null),\n          showTaskFormBelow: showTaskForm === project._id,\n          onDeleteTask: handleDeleteTask,\n          progressType: getProjectProgressType(project._id),\n          createdBy: project.createdBy,\n          children: showTaskForm === project._id && renderTaskForm(project._id)\n        }, project._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectList, \"NE3xg6f0Habmki0vDCVPA0U3PM8=\", false, function () {\n  return [useAuth];\n});\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useEffect","useState","ProjectCard","useAuth","jsxDEV","_jsxDEV","API_BASE_URL","API_URL","TASKS_URL","ProjectList","onSelectProject","selectedProject","showMyProjects","search","_s","projects","setProjects","name","setName","description","setDescription","loading","setLoading","error","setError","showTaskForm","setShowTaskForm","taskTitle","setTaskTitle","taskDescription","setTaskDescription","taskAssignedTo","setTaskAssignedTo","taskDeadline","setTaskDeadline","taskStatus","setTaskStatus","taskProgress1","setTaskProgress1","taskProgress2","setTaskProgress2","taskProgressType","setTaskProgressType","projectTasks","setProjectTasks","selectedProjectId","setSelectedProjectId","openDropdownProjectId","setOpenDropdownProjectId","user","fetchProjects","url","headers","token","localStorage","getItem","res","fetch","ok","errorData","json","catch","Error","message","status","data","tasksRes","allTasks","grouped","forEach","task","pid","project","String","_id","push","err","console","log","handleCreate","e","preventDefault","method","body","JSON","stringify","handleDelete","projectId","window","confirm","handleAddOrUpdateTask","existingTask","newTask","title","assignedTo","deadline","undefined","progress1","progress2","progressType","handleDeleteTask","taskId","prev","filter","getStatusColor","getProjectProgressType","tasks","length","renderTaskForm","_projectTasks$project","_projectTasks$project2","className","children","onSubmit","type","value","onChange","target","placeholder","required","disabled","fileName","_jsxFileName","lineNumber","columnNumber","Number","min","max","onClick","filteredProjects","p","toLowerCase","includes","style","fontSize","fontWeight","map","idx","projectTasksArr","showTaskFormBelow","colorIdx","onAddTask","slice","onDeleteProject","hasTask","showTaskDropdown","onToggleDropdown","v","onDeleteTask","createdBy","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/core/project-manage/frontend/src/components/ProjectList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './ProjectList.css';\nimport ProjectCard from './ProjectCard';\nimport { useAuth } from '../context/AuthContext';\n\nconst API_BASE_URL =  ['https://localhost:5005'||'https://pm-back.onrender.com'];\n\nconst API_URL = `${API_BASE_URL}/api/projects`;\nconst TASKS_URL = `${API_BASE_URL}/api/tasks`;\n\nconst ProjectList = ({ onSelectProject, selectedProject, showMyProjects = false, search }) => {\n  const [projects, setProjects] = useState([]);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [showTaskForm, setShowTaskForm] = useState(null);\n  const [taskTitle, setTaskTitle] = useState('');\n  const [taskDescription, setTaskDescription] = useState('');\n  const [taskAssignedTo, setTaskAssignedTo] = useState('');\n  const [taskDeadline, setTaskDeadline] = useState('');\n  const [taskStatus, setTaskStatus] = useState('todo');\n  const [taskProgress1, setTaskProgress1] = useState(0);\n  const [taskProgress2, setTaskProgress2] = useState(0);\n  const [taskProgressType, setTaskProgressType] = useState('progress');\n  const [projectTasks, setProjectTasks] = useState({});\n  const [selectedProjectId, setSelectedProjectId] = useState(null);\n  const [openDropdownProjectId, setOpenDropdownProjectId] = useState(null);\n  const { user } = useAuth();\n\n  const fetchProjects = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      let url = API_URL;\n      let headers = {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n      };\n      const token = localStorage.getItem('token');\n      if (showMyProjects && token) {\n        url = API_URL + '/mine';\n        headers['Authorization'] = `Bearer ${token}`;\n        }\n      const res = await fetch(url, { headers });\n      if (!res.ok) {\n        const errorData = await res.json().catch(() => ({}));\n        throw new Error(errorData.message || `HTTP error! status: ${res.status}`);\n      }\n    const data = await res.json();\n    setProjects(data);\n      \n      // Fetch all tasks at once\n      const tasksRes = await fetch(TASKS_URL, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!tasksRes.ok) throw new Error('Failed to fetch tasks');\n      const allTasks = await tasksRes.json();\n\n      // Group tasks by project\n      const grouped = {};\n      allTasks.forEach(task => {\n        // Handle both populated and non-populated project field\n        const pid = typeof task.project === 'object' && task.project !== null\n          ? String(task.project._id)\n          : String(task.project);\n        if (!grouped[pid]) grouped[pid] = [];\n        grouped[pid].push(task);\n      });\n      setProjectTasks(grouped);\n\n    } catch (err) {\n      console.error('Error fetching projects or tasks:', err);\n      setError(err.message || 'Failed to load projects or tasks.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    console.log('Fetching projects, showMyProjects:', showMyProjects);\n    fetchProjects();\n  }, [showMyProjects]);\n\n  const handleCreate = async (e) => {\n    e.preventDefault();\n    if (!name) return;\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('Please sign in to create a project.');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      console.log('Creating project with payload:', { name, description });\n      const res = await fetch(API_URL, {\n      method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          ...(token ? { 'Authorization': `Bearer ${token}` } : {})\n        },\n      body: JSON.stringify({ name, description })\n    });\n\n      console.log('Response status:', res.status);\n      if (!res.ok) {\n        const errorData = await res.json().catch(() => ({}));\n        throw new Error(errorData.message || `HTTP error! status: ${res.status}`);\n      }\n\n      const data = await res.json();\n      console.log('Project created successfully:', data);\n\n    setName('');\n    setDescription('');\n    fetchProjects();\n    } catch (err) {\n      console.error('Error creating project:', err);\n      setError(err.message || 'Failed to create project. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async (projectId) => {\n    if (!window.confirm('Are you sure you want to delete this project?')) {\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    try {\n      const res = await fetch(`${API_URL}/${projectId}`, {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!res.ok) {\n        const errorData = await res.json().catch(() => ({}));\n        throw new Error(errorData.message || `HTTP error! status: ${res.status}`);\n      }\n\n      if (selectedProject && selectedProject._id === projectId) {\n        onSelectProject(null);\n      }\n      \n      fetchProjects();\n    } catch (err) {\n      console.error('Error deleting project:', err);\n      setError(err.message || 'Failed to delete project. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddOrUpdateTask = async (projectId) => {\n    setLoading(true);\n    setError('');\n    try {\n      const existingTask = projectTasks[projectId] && projectTasks[projectId][0];\n      let res;\n      let newTask;\n      if (existingTask) {\n        // Update task\n        res = await fetch(`${TASKS_URL}/${existingTask._id}`, {\n          method: 'PUT',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            title: taskTitle,\n            description: taskDescription,\n            status: taskStatus,\n            project: projectId,\n            assignedTo: taskAssignedTo,\n            deadline: taskDeadline || undefined,\n            progress1: taskProgress1,\n            progress2: taskProgress2,\n            progressType: taskProgressType\n          })\n        });\n        if (!res.ok) {\n          const errorData = await res.json().catch(() => ({}));\n          throw new Error(errorData.message || `HTTP error! status: ${res.status}`);\n        }\n        newTask = await res.json();\n      } else {\n        // Add new task\n        res = await fetch(TASKS_URL, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: taskTitle,\n          description: taskDescription,\n          status: taskStatus,\n          project: projectId,\n          assignedTo: taskAssignedTo,\n            deadline: taskDeadline || undefined,\n            progress1: taskProgress1,\n            progress2: taskProgress2,\n            progressType: taskProgressType\n        })\n      });\n      if (!res.ok) {\n        const errorData = await res.json().catch(() => ({}));\n        throw new Error(errorData.message || `HTTP error! status: ${res.status}`);\n      }\n        newTask = await res.json();\n      }\n      // Refresh all tasks from backend to ensure latest values\n      await fetchProjects();\n      setShowTaskForm(null);\n      setOpenDropdownProjectId(null);\n      setTaskTitle('');\n      setTaskDescription('');\n      setTaskAssignedTo('');\n      setTaskDeadline('');\n      setTaskStatus('todo');\n      setTaskProgress1(0);\n      setTaskProgress2(0);\n      setTaskProgressType('progress');\n    } catch (err) {\n      setError(err.message || 'Failed to create/update task. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteTask = async (projectId, taskId) => {\n    if (!window.confirm('Are you sure you want to delete this task?')) {\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    try {\n      const res = await fetch(`${TASKS_URL}/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!res.ok) {\n        const errorData = await res.json().catch(() => ({}));\n        throw new Error(errorData.message || `HTTP error! status: ${res.status}`);\n      }\n\n      // Update tasks for this specific project by removing the deleted task\n      setProjectTasks(prev => ({\n        ...prev,\n        [projectId]: prev[projectId].filter(task => task._id !== taskId)\n      }));\n    } catch (err) {\n      console.error('Error deleting task:', err);\n      setError(err.message || 'Failed to delete task. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'todo': return '#ffc107';\n      case 'in-progress': return '#17a2b8';\n      case 'completed': return '#28a745';\n      default: return '#6c757d';\n    }\n  };\n\n  const getProjectProgressType = (projectId) => {\n    const tasks = projectTasks[projectId] || [];\n    if (tasks.length > 0) {\n      return tasks[0].progressType || 'progress';\n    }\n    return 'progress';\n  };\n\n  const renderTaskForm = (projectId) => (\n              <div className=\"task-form-container\">\n      <form onSubmit={e => { e.preventDefault(); handleAddOrUpdateTask(projectId); }}>\n                  <input\n                    type=\"text\"\n                    value={taskTitle}\n                    onChange={e => setTaskTitle(e.target.value)}\n                    placeholder=\"Task title\"\n                    required\n                    disabled={loading}\n                  />\n                  <input\n                    type=\"text\"\n                    value={taskDescription}\n                    onChange={e => setTaskDescription(e.target.value)}\n                    placeholder=\"Description\"\n                    disabled={loading}\n                  />\n                  <input\n                    type=\"text\"\n                    value={taskAssignedTo}\n                    onChange={e => setTaskAssignedTo(e.target.value)}\n                    placeholder=\"Assigned to\"\n                    disabled={loading}\n                  />\n                  <input\n                    type=\"date\"\n                    value={taskDeadline}\n                    onChange={e => setTaskDeadline(e.target.value)}\n                    disabled={loading}\n                  />\n                  <select\n          value={taskProgressType}\n          onChange={e => setTaskProgressType(e.target.value)}\n                    disabled={loading}\n                  >\n          <option value=\"progress1\">Progress 1</option>\n          <option value=\"progress2\">Progress 2</option>\n                    <option value=\"completed\">Completed</option>\n                  </select>\n        {taskProgressType === 'progress1' && (\n          <input\n            type=\"number\"\n            value={taskProgress1}\n            onChange={e => setTaskProgress1(Number(e.target.value))}\n            placeholder=\"Progress 1 (0-100)\"\n            min={0}\n            max={100}\n            disabled={loading}\n          />\n        )}\n        {taskProgressType === 'progress2' && (\n          <input\n            type=\"number\"\n            value={taskProgress2}\n            onChange={e => setTaskProgress2(Number(e.target.value))}\n            placeholder=\"Progress 2 (0-100)\"\n            min={0}\n            max={100}\n            disabled={loading}\n          />\n        )}\n                  <div className=\"task-form-actions\">\n                    <button type=\"submit\" disabled={loading}>\n            {loading ? (projectTasks[projectId]?.length > 0 ? 'Updating...' : 'Adding...') : (projectTasks[projectId]?.length > 0 ? 'Update Task' : 'Add Task')}\n                    </button>\n                    <button\n                      type=\"button\"\n            onClick={() => {\n              setShowTaskForm(null);\n              setOpenDropdownProjectId(null);\n            }}\n                      disabled={loading}\n                      className=\"cancel-button\"\n                    >\n                      Cancel\n                    </button>\n                  </div>\n                </form>\n              </div>\n  );\n\n  const filteredProjects = search\n    ? projects.filter(p =>\n        (p.name && p.name.toLowerCase().includes(search.toLowerCase())) ||\n        (p.description && p.description.toLowerCase().includes(search.toLowerCase()))\n      )\n    : projects;\n\n  return (\n    <div className=\"project-list-container\">\n      {!selectedProject && (\n        <div className=\"select-project-above-cards\">\n          <span style={{fontSize: '1.2rem', fontWeight: 500}}>Select a project to view tasks.</span>\n      </div>\n      )}\n      <div className=\"project-list-grid\">\n        {filteredProjects.length === 0 ? (\n          <div className=\"no-projects-message\">No projects. Add your project!</div>\n        ) : (\n          filteredProjects.map((project, idx) => {\n            const projectTasksArr = projectTasks[project._id] || [];\n            const showTaskFormBelow = showTaskForm === project._id;\n            return (\n              <ProjectCard\n                key={project._id}\n                project={project}\n                colorIdx={idx}\n                onAddTask={() => {\n                  // If editing, prefill form with task values\n                  if (projectTasksArr.length > 0) {\n                    const task = projectTasksArr[0];\n                    setTaskTitle(task.title || '');\n                    setTaskDescription(task.description || '');\n                    setTaskAssignedTo(task.assignedTo || '');\n                    setTaskDeadline(task.deadline ? task.deadline.slice(0, 10) : '');\n                    setTaskStatus(task.status || 'todo');\n                    setTaskProgress1(task.progress1 || 0);\n                    setTaskProgress2(task.progress2 || 0);\n                    setTaskProgressType(task.progressType || 'progress');\n                  } else {\n                    setTaskTitle('');\n                    setTaskDescription('');\n                    setTaskAssignedTo('');\n                    setTaskDeadline('');\n                    setTaskStatus('todo');\n                    setTaskProgress1(0);\n                    setTaskProgress2(0);\n                    setTaskProgressType('progress');\n                  }\n                  setShowTaskForm(project._id);\n                }}\n                onDeleteProject={() => handleDelete(project._id)}\n                hasTask={!!(projectTasksArr && projectTasksArr.length)}\n                tasks={projectTasksArr}\n                showTaskDropdown={openDropdownProjectId === project._id}\n                onToggleDropdown={v => setOpenDropdownProjectId(v ? project._id : null)}\n                showTaskFormBelow={showTaskForm === project._id}\n                onDeleteTask={handleDeleteTask}\n                progressType={getProjectProgressType(project._id)}\n                createdBy={project.createdBy}\n              >\n                {showTaskForm === project._id && renderTaskForm(project._id)}\n              </ProjectCard>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}